generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model User {
  id               String    @default(cuid()) @id
  avatar           String?
  username         String    @unique
  email            String    @unique
  firstName        String?   @default("")
  lastName         String?   @default("")
  fullName         String?
  bio              String
  loginSecret      String?
  posts            Post[]    @relation("WrittenPosts")
  likes            Like[]
  comments         Comment[]
  rooms            Room[]    @relation(references: [id])
  followedBy       User[]    @relation("UserFollows", references: [id])
  following        User[]    @relation("UserFollows", references: [id])
  messegesSent     Message[] @relation("Sender")
  messegesReceived Message[] @relation("Receiver")
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Post {
  id        String    @default(cuid()) @id
  location  String?
  caption   String
  author    User      @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId  String
  files     File[]
  likes     Like[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Like {
  id        String   @default(cuid()) @id
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        String   @default(cuid()) @id
  text      String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id        String   @default(cuid()) @id
  file      String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Room {
  id           String    @default(cuid()) @id
  participants User[]    @relation(references: [id])
  messeges     Message[] @relation(references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Message {
  id         String   @default(cuid()) @id
  room       Room     @relation(fields: [RoomId], references: [id])
  sender     User     @relation("Sender", fields: [senderId], references: [id])
  receiver   User     @relation("Receiver", fields: [receiverId], references: [id])
  senderId   String
  receiverId String
  RoomId     String
  text       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}